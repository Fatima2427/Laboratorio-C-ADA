public class NumberLongest {
	public static void main (String [] args) {
        //Given an integer array nums, return the length of the longest strictly increasing subsequence.A subsequence is a sequence that can be derived from an array by deleting some or no elements
        //without changing the order of the remaining elements. 
		int [] a = {10,9,2,5,3,7,101,18};
		System.out.println(lengthOfLIS(a));
	}
	    public static int lengthOfLIS(int[] nums) {
	        int longest = 0;
	        if(  nums != null && nums.length !=0){
	            int[] dp = new int[nums.length];
	            dp[0] = 1;
	            longest = 1; 
	        
	        for(int i = 1; i < dp.length; i++){
	            int longM = 0; 
	            for(int j = 0; j < i; j++){
	                if(nums[j] < nums[i] && dp[j] > longM){
	                    longM = dp[j];
	                }
	            }
	            
	            dp[i] = longM + 1;
	            
	            if(dp[i] > longest){
	                longest = dp[i];
	            }
	        }
	        }
	        
	        return longest;
	    }
	    }
	    